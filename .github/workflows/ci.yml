name: CI

on:
  push:
    branches: [ main, develop, '001-mcp-detection-platform' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-go:
    name: Lint Go Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: golangci-lint - Scanner
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: backend/scanner

      - name: golangci-lint - Correlator
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: backend/correlator

  lint-python:
    name: Lint Python Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [signature-engine, judge, registry-api]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 mypy
          pip install -r backend/${{ matrix.service }}/requirements.txt

      - name: Black format check
        run: black --check backend/${{ matrix.service }}

      - name: Flake8 lint
        run: flake8 backend/${{ matrix.service }}

      - name: MyPy type check
        run: mypy backend/${{ matrix.service }}/src || true

  lint-frontend:
    name: Lint Frontend Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: ESLint
        working-directory: frontend
        run: npm run lint

      - name: Prettier check
        working-directory: frontend
        run: npx prettier --check "src/**/*.{ts,tsx,css}"

  security-scan-go:
    name: Security Scan - Go
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Run Gosec Scanner
        uses: securego/gosec@master
        with:
          args: '-exclude-dir=vendor ./backend/scanner/... ./backend/correlator/...'

  security-scan-python:
    name: Security Scan - Python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Bandit
        run: pip install bandit[toml]

      - name: Run Bandit
        run: bandit -r backend/signature-engine backend/judge backend/registry-api -ll

  security-scan-containers:
    name: Security Scan - Containers
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  build-go:
    name: Build Go Services
    runs-on: ubuntu-latest
    needs: [lint-go]
    strategy:
      matrix:
        service: [scanner, correlator]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build
        working-directory: backend/${{ matrix.service }}
        run: go build -v ./...

  build-python:
    name: Build Python Services
    runs-on: ubuntu-latest
    needs: [lint-python]
    strategy:
      matrix:
        service: [signature-engine, judge, registry-api]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/${{ matrix.service }}/requirements.txt

      - name: Verify imports
        run: |
          cd backend/${{ matrix.service }}
          python -c "import sys; print('Python service structure valid')"

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: [lint-frontend]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build
        working-directory: frontend
        run: npm run build
